make all --print-data-base --no-builtin-variables --no-builtin-rules --question
***

*** Configuration file ".config" not found!

***

*** Please run some configurator (e.g. "make oldconfig" or

*** "make menuconfig" or "make xconfig").

***

Makefile:705: include/config/auto.conf.cmd: No such file or directory
make: *** [Makefile:714: .config] Error 1

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Fri Aug 26 02:51:49 2022

# Variables

# makefile (from 'scripts/Kbuild.include', line 83)
cc-cross-prefix = $(firstword $(foreach c, $(1), $(if $(shell command -v -- $(c)gcc 2>/dev/null), $(c))))
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'scripts/Kbuild.include', line 225)
cmd_and_fixdep = $(cmd); scripts/basic/fixdep $(depfile) $@ '$(make-cmd)' > $(dot-target).cmd; rm -f $(depfile)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from 'Makefile', line 1035)
LDFLAGS_vmlinux :=  --build-id=sha1
# environment
DESKTOP_SESSION = ubuntu
# makefile (from 'Makefile', line 489)
AFLAGS_KERNEL = 
# default
.SHELLFLAGS := -c
# makefile (from 'arch/x86/Makefile', line 150)
CONFIG_X86_X32_ABI := 
# makefile (from 'Makefile', line 1570)
CLEAN_FILES = include/ksym vmlinux.symvers modules-only.symvers modules.builtin modules.builtin.modinfo modules.nsdeps compile_commands.json .thinlto-cache
# makefile (from 'Makefile', line 1896)
KBUILD_MODULES := 
# makefile (from 'Makefile', line 1749)
help-board-dirs := 
# environment
XDG_SESSION_CLASS = user
# makefile (from 'Makefile', line 3)
PATCHLEVEL = 10
# makefile (from 'scripts/Kbuild.include', line 308)
define config_filename
ifneq ($$(CONFIG_$(1)),"")
$(1)_FILENAME := $$(subst \\,\,$$(subst \$$(quote),$$(quote),$$(subst $$(space_escape),\$$(space),$$(patsubst "%",%,$$(subst $$(space),$$(space_escape),$$(CONFIG_$(1)))))))
ifneq ($$(patsubst /%,%,$$(firstword $$($(1)_FILENAME))),$$(firstword $$($(1)_FILENAME)))
else
ifeq ($$(wildcard $$($(1)_FILENAME)),)
ifneq ($$(wildcard $$(srctree)/$$($(1)_FILENAME)),)
$(1)_SRCPREFIX := $(srctree)/
endif
endif
endif
endif
endef
# environment
SNAP_COMMON = /var/snap/code/common
# environment
XDG_SESSION_TYPE = x11
# makefile (from 'Makefile', line 148)
abs_srctree := /home/bst/kernel_src/sdk_2_2_2_4/01_SanYi/a1000b_SanYi_kernel_2_2_2_4/kernel
# makefile (from 'Makefile', line 420)
HOST_LFS_CFLAGS := 
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'arch/x86/Makefile', line 32)
M16_CFLAGS :=  -m16
# environment
IM_CONFIG_PHASE = 1
# makefile (from 'Makefile', line 438)
KBUILD_HOSTLDFLAGS := $(subst ,, )
# makefile (from 'scripts/Kbuild.include', line 59)
filechk = 	$(Q)set -e; mkdir -p $(dir $@); trap "rm -f $(dot-target).tmp" EXIT; { $(filechk_$(1)); } > $(dot-target).tmp; if [ ! -r $@ ] || ! cmp -s $@ $(dot-target).tmp; then $(kecho) '  UPD     $@'; mv -f $(dot-target).tmp $@; fi
# makefile (from 'Makefile', line 1150)
resolve_btfids_O = $(abspath $(objtree))/tools/bpf/resolve_btfids
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/bst/kernel_src/sdk_2_2_2_4/01_SanYi/a1000b_SanYi_kernel_2_2_2_4/kernel
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 456)
NM = $(CROSS_COMPILE)nm
# environment
SNAP_DATA = /var/snap/code/105
# makefile (from 'Makefile', line 1172)
MODULES_NSDEPS := modules.nsdeps
# makefile (from 'Makefile', line 91)
Q = @
# makefile (from 'scripts/Kbuild.include', line 146)
ld-version = $(shell $(LD) --version | $(srctree)/scripts/ld-version.sh)
# makefile (from 'Makefile', line 1135)
has_libelf := 0
# environment
VSCODE_NLS_CONFIG = {"locale":"zh-cn","availableLanguages":{"*":"zh-cn"},"_languagePackId":"cc0490d1397af23dc5bf44a96fe15dbb.zh-cn","_translationsConfigFile":"/home/bst/.config/Code/clp/cc0490d1397af23dc5bf44a96fe15dbb.zh-cn/tcf.json","_cacheRoot":"/home/bst/.config/Code/clp/cc0490d1397af23dc5bf44a96fe15dbb.zh-cn","_resolvedLanguagePackCoreLocation":"/home/bst/.config/Code/clp/cc0490d1397af23dc5bf44a96fe15dbb.zh-cn/e4503b30fc78200f846c62cf8091b76ff5547662","_corruptedFile":"/home/bst/.config/Code/clp/cc0490d1397af23dc5bf44a96fe15dbb.zh-cn/corrupted.info","_languagePackSupport":true}
# makefile (from 'Makefile', line 2054)
PHONY := __all scripts_basic outputmakefile all bzImage bzdisk fdimage fdimage144 fdimage288 isoimage install bzlilo vdso_install resolve_btfids_clean prepare0 headers archheaders archscripts headers_install autoksyms_recursive scripts prepare archprepare asm-generic uapi-asm-generic prepare-objtool prepare-resolve_btfids headerdep headers_check scripts_unifdef kselftest kselftest-merge scripts_dtc dt_binding_check modules modules_install archclean vmlinuxclean _mrproper_scripts mrproper distclean help xmldocs latexdocs pdfdocs htmldocs epubdocs cleandocs linkcheckdocs dochelp refcheckdocs scripts_gdb descend init usr arch/x86 kernel certs mm fs ipc security crypto block drivers sound net virt lib arch/x86/lib _clean_Documentation _clean_arch/x86 _clean_arch/x86/lib _clean_arch/x86/math-emu _clean_arch/x86/oprofile _clean_arch/x86/pci _clean_arch/x86/power _clean_arch/x86/video _clean_block _clean_certs _clean_crypto _clean_drivers _clean_fs _clean_init _clean_ipc _clean_kernel _clean_lib _clean_mm _clean_net _clean_samples _clean_security _clean_sound _clean_usr _clean_virt clean nsdeps clang-tidy clang-analyzer includecheck versioncheck coccicheck export_report checkstack kernelrelease kernelversion image_name FORCE
# makefile (from 'Makefile', line 479)
XZ = xz
# makefile (from 'Makefile', line 1936)
quiet_cmd_tags = GEN     $@
# environment
JOURNAL_STREAM = 8:65136
# makefile (from 'Makefile', line 1603)
mrproper-dirs := _mrproper_scripts
# makefile (from 'arch/x86/Makefile', line 273)
KBUILD_IMAGE := arch/x86/boot/bzImage
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (from 'Makefile', line 1034)
KBUILD_LDFLAGS_MODULE :=  --build-id=sha1
# makefile (from 'Makefile', line 468)
DEPMOD = depmod
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'scripts/Makefile.extrawarn', line 1)
MAKEFILE_LIST :=  Makefile scripts/Kbuild.include scripts/subarch.include arch/x86/Makefile scripts/Makefile.extrawarn
# makefile (from 'Makefile', line 245)
building_out_of_srctree := 
# makefile (from 'Makefile', line 1062)
CHECKFLAGS := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ -Wbitwise -Wno-return-void -Wno-unknown-attribute  -D__x86_64__ --arch=x86 -mlittle-endian -m32
# automatic
@F = $(notdir $@)
# makefile (from 'Makefile', line 488)
CFLAGS_KERNEL = 
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from 'Makefile', line 286)
config-build := 
# makefile (from 'Makefile', line 290)
single-build := 
# environment
USERNAME = bst
# makefile (from 'Makefile', line 1362)
filechk_utsrelease.h = 	if [ `echo -n "$(UTS_RELEASE)" | wc -c ` -gt $(uts_len) ]; then echo '"$(UTS_RELEASE)" exceeds $(uts_len) characters' >&2; exit 1; fi; echo \#define UTS_RELEASE \"$(UTS_RELEASE)\"
# makefile (from 'Makefile', line 476)
KLZOP = lzop
# makefile (from 'Makefile', line 244)
srctree := .
# makefile (from 'Makefile', line 428)
HOSTCC = gcc
# makefile (from 'arch/x86/Makefile', line 19)
cc_stack_align8 := -mpreferred-stack-boundary=3
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from 'Makefile', line 1032)
KBUILD_CFLAGS := -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Werror=return-type -Wno-format-security -std=gnu89 -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -fcf-protection=none -m64 -falign-jumps=1 -falign-loops=1 -mno-80387 -mno-fp-ret-in-387 -mpreferred-stack-boundary=3 -mskip-rax-setup  -mno-red-zone -mcmodel=kernel -Wno-sign-compare -fno-asynchronous-unwind-tables -fno-delete-null-pointer-checks -Wno-frame-address -Wno-format-truncation -Wno-format-overflow -Wno-address-of-packed-member --param=allow-store-data-races=0  -Wframe-larger-than= -fno-stack-protector    -fomit-frame-pointer  -Wdeclaration-after-statement -Wvla -Wno-pointer-sign       -fno-strict-overflow -fno-stack-check  -Werror=date-time    
# makefile (from 'Makefile', line 1753)
boards-per-dir = $(sort $(notdir $(wildcard $(srctree)/arch/$(SRCARCH)/configs/$*/*_defconfig)))
# makefile (from 'Makefile', line 2041)
quiet_cmd_depmod = DEPMOD  $(KERNELRELEASE)
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from 'Makefile', line 2)
VERSION = 5
# makefile (from 'Makefile', line 422)
HOST_LFS_LIBS := 
# makefile (from 'scripts/Kbuild.include', line 37)
stringify = $(squote)$(quote)$1$(quote)$(squote)
# environment
_ = /snap/code/105/usr/share/code/code
# makefile (from 'arch/x86/Makefile', line 95)
biarch := -m64
# makefile (from 'Makefile', line 45)
LC_COLLATE = C
# makefile (from 'Makefile', line 467)
INSTALLKERNEL := installkernel
# makefile (from 'Makefile', line 1129)
mod_sign_cmd = true
# makefile (from 'Makefile', line 466)
AWK = awk
# makefile (from 'Makefile', line 1031)
KBUILD_AFLAGS := -D__ASSEMBLY__ -fno-PIE -m64 
# environment
MANAGERPID = 3178
# makefile (from 'scripts/Kbuild.include', line 233)
if_changed_rule = $(if $(newer-prereqs)$(cmd-check),$(rule_$(1)),@:)
# makefile (from 'scripts/Kbuild.include', line 8)
squote := '
# makefile (from 'Makefile', line 538)
RCS_FIND_IGNORE := \( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \) -prune -o
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'Makefile', line 1356)
uts_len := 64
# makefile (from 'Makefile', line 240)
KBUILD_MIXED_TREE := 
# makefile (from 'Makefile', line 1953)
quiet_cmd_gen_compile_commands = GEN     $@
# makefile (from 'Makefile', line 442)
CPP = $(CC) -E
# environment
VSCODE_CWD = /home/bst
# makefile (from 'arch/x86/Makefile', line 31)
CODE16GCC_CFLAGS := -m32 -Wa,./arch/x86/boot/code16gcc.h
# makefile (from 'Makefile', line 239)
mixed-build-prefix = $(if $(KBUILD_MIXED_TREE),$(KBUILD_MIXED_TREE)/)
# makefile (from 'Makefile', line 502)
LINUXINCLUDE := -I./arch/x86/include -I./arch/x86/include/generated  -I./include -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h
# makefile (from 'Makefile', line 1021)
include- = scripts/Makefile.kasan scripts/Makefile.kcsan scripts/Makefile.ubsan scripts/Makefile.kcov scripts/Makefile.gcc-plugins
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/105/usr/share/glib-2.0/schemas
# makefile (from 'scripts/Kbuild.include', line 128)
cc-option-yn = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o "$$TMP",y,n)
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'Makefile', line 2042)
cmd_depmod = $(CONFIG_SHELL) $(srctree)/scripts/depmod.sh $(DEPMOD) $(KERNELRELEASE) $(mixed-build-prefix)
# makefile (from 'Makefile', line 516)
KBUILD_AFLAGS_KERNEL := 
# makefile (from 'Makefile', line 1260)
quiet_cmd_autoksyms_h = GEN     $@
# makefile (from 'Makefile', line 454)
LD = $(CROSS_COMPILE)ld
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# makefile (from 'Makefile', line 465)
YACC = bison
# makefile (from 'Makefile', line 471)
PYTHON3 = python3
# makefile (from 'Makefile', line 1052)
KBUILD_USERCFLAGS := -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89 -m64
# environment
SESSION_MANAGER = local/bst-ThinkPad-E15-Gen-2:@/tmp/.ICE-unix/6024,unix/bst-ThinkPad-E15-Gen-2:/tmp/.ICE-unix/6024
# makefile (from 'scripts/Kbuild.include', line 10)
space := $(subst ,, )
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'Makefile', line 1182)
hdr-inst := -f ./scripts/Makefile.headersinst obj
# environment
GDK_PIXBUF_MODULE_FILE = /home/bst/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
SNAP = /snap/code/105
# makefile (from 'scripts/Kbuild.include', line 93)
try-run = $(shell set -e; TMP=$(TMPOUT)/tmp; TMPO=$(TMPOUT)/tmp.o; mkdir -p $(TMPOUT); trap "rm -rf $(TMPOUT)" EXIT; if ($(1)) >/dev/null 2>&1; then echo "$(2)"; else echo "$(3)"; fi)
# makefile (from 'scripts/Kbuild.include', line 6)
comma := ,
# makefile (from 'Makefile', line 1639)
boards := gki_defconfig i386_defconfig x86_64_defconfig
# makefile (from 'Makefile', line 1081)
INSTALL_DTBS_PATH = $(INSTALL_PATH)/dtbs/$(KERNELRELEASE)
# makefile (from 'Makefile', line 163)
this-makefile := Makefile
# makefile (from 'Makefile', line 1270)
cmd_link-vmlinux = $(CONFIG_SHELL) $< "$(LD)" "$(KBUILD_LDFLAGS)" "$(LDFLAGS_vmlinux)"; $(if $(ARCH_POSTLINK), $(MAKE) -f $(ARCH_POSTLINK) $@, true)
# makefile (from 'Makefile', line 637)
KBUILD_BUILTIN := 1
# makefile (from 'Makefile', line 2038)
cmd_rmfiles = rm -rf $(rm-files)
# makefile (from 'Makefile', line 2046)
existing-targets := 
# makefile (from 'Makefile', line 273)
version_h := include/generated/uapi/linux/version.h
# makefile (from 'Makefile', line 261)
VPATH := .
# environment
SNAP_VERSION = e4503b30
# makefile (from 'Makefile', line 455)
AR = $(CROSS_COMPILE)ar
# environment
XDG_MENU_PREFIX = gnome-
# environment
DISABLE_WAYLAND = 1
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
INVOCATION_ID = 28eb5881821d4e02905fec1fbba5eaf7
# makefile (from 'scripts/Kbuild.include', line 158)
build := -f ./scripts/Makefile.build obj
 
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/105/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# makefile (from 'Makefile', line 5)
EXTRAVERSION = +2.0.0
# makefile (from 'Makefile', line 1320)
asm-generic := -f ./scripts/Makefile.asm-generic obj
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 260)
objtree := .
# makefile (from 'scripts/Kbuild.include', line 133)
cc-disable-warning = $(call try-run, $(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) -W$(strip $(1)) -c -x c /dev/null -o "$$TMP",-Wno-$(strip $(1)))
# environment
LS_COLORS = 
# makefile (from 'scripts/Kbuild.include', line 215)
newer-prereqs = $(filter-out $(PHONY),$?)
# makefile (from 'arch/x86/Makefile', line 129)
cflags- = $(call cc-option,-march=k8) $(call cc-option,-march=nocona) $(call cc-option,-march=core2,$(call cc-option,-mtune=generic)) $(call cc-option,-march=atom) $(call cc-option,-mtune=atom,$(call cc-option,-mtune=generic)) $(call cc-option,-mtune=generic)
# environment
XDG_SESSION_DESKTOP = ubuntu
# makefile (from 'Makefile', line 4)
SUBLEVEL = 59
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 220896
# makefile (from 'Makefile', line 480)
ZSTD = zstd
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'Makefile', line 1258)
autoksyms_h := 
# makefile (from 'arch/x86/Makefile', line 199)
KBUILD_LDFLAGS :=  -m elf_x86_64
# makefile (from 'Makefile', line 1192)
cmd_headers_install = mkdir -p $(INSTALL_HDR_PATH); rsync -mrl --include='*/' --include='*\.h' --exclude='*' $(hdr-prefix)usr/include $(INSTALL_HDR_PATH);
# makefile (from 'Makefile', line 411)
KCONFIG_CONFIG = .config
# makefile (from 'Makefile', line 277)
no-dot-config-targets := %clean mrproper cleandocs cscope gtags TAGS tags help% %docs check% coccicheck include/generated/uapi/linux/version.h headers headers_% archheaders archscripts %asm-generic kernelversion %src-pkg dt_binding_check outputmakefile
# makefile (from 'Makefile', line 691)
RETPOLINE_CFLAGS_CLANG := -mretpoline-external-thunk
# makefile (from 'Makefile', line 1074)
INSTALL_PATH = /boot
# makefile (from 'Makefile', line 429)
HOSTCXX = g++
# makefile (from 'Makefile', line 600)
CC_VERSION_TEXT = $(shell $(CC) --version 2>/dev/null | head -n 1)
# environment
SNAP_INSTANCE_KEY = 
# makefile (from 'arch/x86/Makefile', line 262)
BOOT_TARGETS = bzdisk fdimage fdimage144 fdimage288 isoimage
# makefile (from 'Makefile', line 1224)
build-dirs := init usr arch/x86 kernel certs mm fs ipc security crypto block drivers sound net virt lib arch/x86/lib
# makefile (from 'Makefile', line 1241)
KBUILD_ALLDIRS := Documentation LICENSES arch block certs crypto drivers fs include init ipc kernel lib mm net samples scripts security sound tools usr virt
# environment
PWD = /home/bst/kernel_src/sdk_2_2_2_4/01_SanYi/a1000b_SanYi_kernel_2_2_2_4/kernel
# makefile (from 'Makefile', line 1370)
filechk_version.h = 	if [ $(SUBLEVEL) -gt 255 ]; then echo \#define LINUX_VERSION_CODE $(shell expr $(VERSION) \* 65536 + $(PATCHLEVEL) \* 256 + 255); else echo \#define LINUX_VERSION_CODE $(shell expr $(VERSION) \* 65536 + $(PATCHLEVEL) \* 256 + $(SUBLEVEL)); fi; echo '#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + ((c) > 255 ? 255 : (c)))'
# makefile (from 'Makefile', line 1220)
subdir-modorder := init/modules.order usr/modules.order arch/x86/modules.order kernel/modules.order certs/modules.order mm/modules.order fs/modules.order ipc/modules.order security/modules.order crypto/modules.order block/modules.order lib/modules.order arch/x86/lib/modules.order drivers/modules.order sound/modules.order net/modules.order virt/modules.order
# makefile (from 'Makefile', line 530)
OBJCOPYFLAGS := 
# makefile (from 'Makefile', line 282)
no-sync-config-targets := %clean mrproper cleandocs cscope gtags TAGS tags help% %docs check% coccicheck include/generated/uapi/linux/version.h headers headers_% archheaders archscripts %asm-generic kernelversion %src-pkg dt_binding_check outputmakefile %install kernelrelease image_name
# default
.LOADED := 
# makefile (from 'Makefile', line 692)
RETPOLINE_VDSO_CFLAGS_CLANG := -mretpoline
# makefile (from 'arch/x86/Makefile', line 18)
cc_stack_align4 := -mpreferred-stack-boundary=2
# environment
SSH_AGENT_PID = 5898
# environment
PKG_CONFIG_PATH = :/usr/local/lib/pkgconfig
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# makefile (from 'Makefile', line 473)
BASH = bash
# makefile (from 'Makefile', line 436)
KBUILD_HOSTCFLAGS := -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89  
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from 'Makefile', line 470)
PYTHON = python
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# makefile (from 'Makefile', line 1575)
MRPROPER_FILES = include/config include/generated arch/$(SRCARCH)/include/generated .tmp_objdiff debian snap tar-install .config .config.old .version Module.symvers signing_key.pem signing_key.priv signing_key.x509 x509.genkey extra_certificates signing_key.x509.keyid signing_key.x509.signer vmlinux-gdb.py *.spec
# environment
HOME = /home/bst
# makefile (from 'scripts/Kbuild.include', line 112)
as-instr = $(call try-run, printf "%b\n" "$(1)" | $(CC) $(KBUILD_AFLAGS) -c -x assembler -o "$$TMP" -,$(2),$(3))
# makefile (from 'scripts/Kbuild.include', line 117)
__cc-option = $(call try-run, $(1) -Werror $(2) $(3) -c -x c /dev/null -o "$$TMP",$(3),$(4))
# makefile (from 'Makefile', line 1765)
DOC_TARGETS := xmldocs latexdocs pdfdocs htmldocs epubdocs cleandocs linkcheckdocs dochelp refcheckdocs
# makefile (from 'arch/x86/Makefile', line 314)
define archhelp
  echo  '* bzImage      - Compressed kernel image (arch/x86/boot/bzImage)'
  echo  '  install      - Install kernel using'
  echo  '                  (your) ~/bin/$(INSTALLKERNEL) or'
  echo  '                  (distribution) /sbin/$(INSTALLKERNEL) or'
  echo  '                  install to $$(INSTALL_PATH) and run lilo'
  echo  '  fdimage      - Create 1.4MB boot floppy image (arch/x86/boot/fdimage)'
  echo  '  fdimage144   - Create 1.4MB boot floppy image (arch/x86/boot/fdimage)'
  echo  '  fdimage288   - Create 2.8MB boot floppy image (arch/x86/boot/fdimage)'
  echo  '  isoimage     - Create a boot CD-ROM image (arch/x86/boot/image.iso)'
  echo  '                  bzdisk/fdimage*/isoimage also accept:'
  echo  '                  FDARGS="..."  arguments for the booted kernel'
  echo  '                  FDINITRD=file initrd for the booted kernel'
endef
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/bst/.config/Code/CachedData/e4503b30fc78200f846c62cf8091b76ff5547662
# makefile (from 'scripts/Makefile.extrawarn', line 12)
KBUILD_EXTRA_WARN = $(KBUILD_ENABLE_EXTRA_GCC_CHECKS)
# environment
LOGNAME = bst
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'Makefile', line 1937)
cmd_tags = $(BASH) $(srctree)/scripts/tags.sh $@
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = lMr3Yu36NfYIiR-V9GsCMgedxlB5QgeCnDnuty3P4kDVSAmvMm6U
# makefile (from 'Makefile', line 437)
KBUILD_HOSTCXXFLAGS := -Wall -O2  
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'Makefile', line 474)
KGZIP = gzip
# makefile (from 'Makefile', line 487)
LDFLAGS_MODULE = 
# makefile (from 'scripts/Kbuild.include', line 180)
silent_redirect := exec >/dev/null;
# environment
SNAP_USER_COMMON = /home/bst/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 83)
KBUILD_VERBOSE = 0
# makefile (from 'Makefile', line 477)
LZMA = lzma
# makefile (from 'Makefile', line 518)
KBUILD_AFLAGS_MODULE := -DMODULE
# makefile (from 'Makefile', line 667)
drivers-y := drivers/ sound/ net/ virt/
# makefile (from 'Makefile', line 1189)
INSTALL_HDR_PATH = $(objtree)/$(hdr-prefix)usr
# makefile (from 'Makefile', line 1234)
KBUILD_VMLINUX_LIBS := lib/lib.a arch/x86/lib/lib.a
# environment
MAKELEVEL := 0
# environment
SNAP_REAL_HOME = /home/bst
# makefile (from 'Makefile', line 1641)
board-dirs := 
# makefile (from 'Makefile', line 421)
HOST_LFS_LDFLAGS := 
# default
MAKE = $(MAKE_COMMAND)
# makefile (from 'scripts/Kbuild.include', line 178)
redirect := 
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SNAP_USER_DATA = /home/bst/snap/code/105
# makefile (from 'Makefile', line 1171)
MODORDER := modules.order
# environment
SHLVL = 0
# makefile (from 'arch/x86/Makefile', line 7)
KBUILD_DEFCONFIG := x86_64_defconfig
# makefile (from 'Makefile', line 226)
extmod-prefix = $(if $(KBUILD_EXTMOD),$(KBUILD_EXTMOD)/)
# makefile (from 'Makefile', line 1089)
MODLIB = $(INSTALL_MOD_PATH)/lib/modules/$(KERNELRELEASE)
# makefile (from 'scripts/Kbuild.include', line 43)
silent_kecho := :
# makefile (from 'Makefile', line 1954)
cmd_gen_compile_commands = $(PYTHON3) $< -a $(AR) -o $@ $(filter-out $<, $(real-prereqs))
# makefile (from 'Makefile', line 360)
KERNELRELEASE = $(shell cat include/config/kernel.release 2> /dev/null)
# makefile (from 'Makefile', line 1360)
UTS_RELEASE = $(KERNELRELEASE)
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# makefile (from 'Makefile', line 287)
mixed-build := 
# makefile (from 'Makefile', line 519)
KBUILD_CFLAGS_MODULE := -DMODULE
# default
MAKE_VERSION := 4.2.1
# environment
USER = bst
# environment
SNAP_REVISION = 105
# makefile (from 'Makefile', line 472)
CHECK = sparse
# makefile (from 'Makefile', line 1210)
core-y := init/ usr/ arch/x86/ kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/
# makefile
.DEFAULT_GOAL := __all
# makefile (from 'Makefile', line 1911)
clean-dirs := _clean_Documentation _clean_arch/x86 _clean_arch/x86/lib _clean_arch/x86/math-emu _clean_arch/x86/oprofile _clean_arch/x86/pci _clean_arch/x86/power _clean_arch/x86/video _clean_block _clean_certs _clean_crypto _clean_drivers _clean_fs _clean_init _clean_ipc _clean_kernel _clean_lib _clean_mm _clean_net _clean_samples _clean_security _clean_sound _clean_usr _clean_virt
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from 'scripts/Kbuild.include', line 223)
if_changed_dep = $(if $(newer-prereqs)$(cmd-check),$(cmd_and_fixdep),@:)
# makefile (from 'Makefile', line 288)
need-config := 1
# makefile (from 'Makefile', line 6)
NAME = Dare mighty things
# makefile (from 'Makefile', line 174)
sub_make_done := 1
# makefile (from 'Makefile', line 541)
RCS_TAR_IGNORE := --exclude SCCS --exclude BitKeeper --exclude .svn --exclude CVS --exclude .pc --exclude .hg --exclude .git
# makefile (from 'Makefile', line 1236)
KBUILD_VMLINUX_OBJS := arch/x86/kernel/head_64.o arch/x86/kernel/head64.o arch/x86/kernel/ebda.o arch/x86/kernel/platform-quirks.o init/built-in.a usr/built-in.a arch/x86/built-in.a kernel/built-in.a certs/built-in.a mm/built-in.a fs/built-in.a ipc/built-in.a security/built-in.a crypto/built-in.a block/built-in.a lib/built-in.a arch/x86/lib/built-in.a drivers/built-in.a sound/built-in.a net/built-in.a virt/built-in.a
# makefile (from 'Makefile', line 138)
abs_objtree := /home/bst/kernel_src/sdk_2_2_2_4/01_SanYi/a1000b_SanYi_kernel_2_2_2_4/kernel
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'scripts/Kbuild.include', line 142)
ld-option = $(call try-run, $(LD) $(KBUILD_LDFLAGS) $(1) -v,$(1),$(2),$(3))
# makefile (from 'Makefile', line 459)
READELF = $(CROSS_COMPILE)readelf
# makefile (from 'Makefile', line 693)
RETPOLINE_CFLAGS := -mindirect-branch=thunk-extern -mindirect-branch-register
# makefile (from 'Makefile', line 1961)
targets := vmlinux compile_commands.json
# default
MAKE_COMMAND := make
# makefile (from 'scripts/Kbuild.include', line 170)
clean := -f ./scripts/Makefile.clean obj
# makefile (from 'Makefile', line 969)
NOSTDINC_FLAGS :=  -nostdinc -isystem /usr/lib/gcc/x86_64-linux-gnu/9/include
# default
.VARIABLES := 
# makefile (from 'scripts/Kbuild.include', line 174)
echo-cmd = $(if $($(quiet)cmd_$(1)), echo '  $(call escsq,$($(quiet)cmd_$(1)))$(echo-why)';)
# makefile (from 'Makefile', line 486)
AFLAGS_MODULE = 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = zh_CN:zh
# makefile (from 'scripts/Kbuild.include', line 21)
depfile = $(subst $(comma),_,$(dot-target).d)
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-2b1ce8fd-1.70.2-main.sock
# makefile (from 'Makefile', line 833)
DEBUG_CFLAGS := 
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from 'scripts/Kbuild.include', line 150)
ld-ifversion = $(shell [ $(ld-version) $(1) $(2) ] && echo $(3) || echo $(4))
# makefile (from 'scripts/Kbuild.include', line 208)
make-cmd = $(call escsq,$(subst $(pound),$$(pound),$(subst $$,$$$$,$(cmd_$(1)))))
# makefile (from 'Makefile', line 464)
LEX = flex
# makefile (from 'Makefile', line 384)
ARCH = $(SUBARCH)
# makefile
MAKEFLAGS = prR --no-print-directory
# environment
MFLAGS = -prR --no-print-directory
 
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'scripts/Kbuild.include', line 106)
as-option = $(call try-run, $(CC) $(KBUILD_CFLAGS) $(1) -c -x assembler /dev/null -o "$$TMP",$(1),$(2))
# makefile (from 'Makefile', line 1267)
ARCH_POSTLINK := 
# makefile (from 'scripts/Kbuild.include', line 11)
space_escape := _-_SPACE_-_
# makefile (from 'Makefile', line 439)
KBUILD_HOSTLDLIBS := $(subst ,, )
# makefile (from 'Makefile', line 90)
quiet = quiet_
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'scripts/Kbuild.include', line 123)
cc-option = $(call __cc-option, $(CC), $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS),$(1),$(2))
# makefile (from 'Makefile', line 458)
OBJDUMP = $(CROSS_COMPILE)objdump
# makefile (from 'Makefile', line 522)
CLANG_FLAGS := 
# environment
GDK_BACKEND = x11
# makefile (from 'Makefile', line 690)
RETPOLINE_VDSO_CFLAGS_GCC := -mindirect-branch=thunk-inline -mindirect-branch-register
# automatic
+F = $(notdir $+)
# makefile (from 'Makefile', line 1261)
cmd_autoksyms_h = mkdir -p $(dir $@); $(CONFIG_SHELL) $(srctree)/scripts/gen_autoksyms.sh $@
# makefile (from 'Makefile', line 453)
CC = $(CROSS_COMPILE)gcc
# makefile (from 'scripts/subarch.include', line 7)
SUBARCH := x86
# makefile (from 'Makefile', line 460)
STRIP = $(CROSS_COMPILE)strip
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'Makefile', line 679)
CFLAGS_GCOV := -fprofile-arcs -ftest-coverage -fno-tree-loop-im -Wno-maybe-uninitialized
# makefile (from 'scripts/Kbuild.include', line 164)
dtbinst := -f ./scripts/Makefile.dtbinst obj
# makefile (from 'Makefile', line 524)
CROSS_COMPILE := 
# makefile (from 'scripts/Kbuild.include', line 138)
cc-ifversion = $(shell [ $(CONFIG_GCC_VERSION)0 $(1) $(2)000 ] && echo $(3) || echo $(4))
# makefile (from 'arch/x86/Makefile', line 240)
libs-y := lib/ arch/x86/lib/
# makefile (from 'scripts/Kbuild.include', line 33)
escsq = $(subst $(squote),'\$(squote)',$1)
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'scripts/Kbuild.include', line 183)
cmd = @set -e; $(echo-cmd) $($(quiet)redirect) $(cmd_$(1))
# default
MAKEFILES := 
# makefile (from 'Makefile', line 1212)
vmlinux-dirs := init usr arch/x86 kernel certs mm fs ipc security crypto block drivers sound net virt lib arch/x86/lib
# makefile (from 'Makefile', line 1016)
include-y := scripts/Makefile.extrawarn
# environment
SNAP_COOKIE = lMr3Yu36NfYIiR-V9GsCMgedxlB5QgeCnDnuty3P4kDVSAmvMm6U
# makefile (from 'Makefile', line 388)
SRCARCH := x86
# makefile (from 'Makefile', line 694)
RETPOLINE_VDSO_CFLAGS := -mindirect-branch=thunk-inline -mindirect-branch-register
# makefile (from 'Makefile', line 1105)
mod_strip_cmd = true
# makefile (from 'Makefile', line 1113)
mod_compress_cmd = true
# makefile (from 'Makefile', line 46)
LC_NUMERIC = C
# makefile (from 'Makefile', line 418)
CONFIG_SHELL := sh
# makefile (from 'Makefile', line 485)
CFLAGS_MODULE = 
# automatic
<F = $(notdir $<)
# makefile (from 'scripts/Kbuild.include', line 179)
quiet_redirect := 
# makefile (from 'Makefile', line 493)
USERINCLUDE := -I./arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/kconfig.h
# makefile (from 'Makefile', line 2037)
quiet_cmd_rmfiles = $(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))
# makefile (from 'Makefile', line 1030)
KBUILD_CPPFLAGS := -D__KERNEL__  
# environment
SNAP_NAME = code
# makefile (from 'Makefile', line 1239)
KBUILD_LDS := arch/x86/kernel/vmlinux.lds
# makefile (from 'Makefile', line 469)
PERL = perl
# makefile (from 'arch/x86/Makefile', line 260)
boot := arch/x86/boot
# makefile (from 'Makefile', line 462)
PAHOLE = pahole
# environment
LC_ALL = C
# makefile (from 'Makefile', line 1285)
filechk_kernel.release = echo "$(KERNELVERSION)$$($(CONFIG_SHELL) $(srctree)/scripts/setlocalversion $(srctree) $(BRANCH) $(KMI_GENERATION))"
# makefile (from 'scripts/Kbuild.include', line 16)
dot-target = $(dir $@).$(notdir $@)
# makefile (from 'arch/x86/Makefile', line 238)
head-y := arch/x86/kernel/head_64.o arch/x86/kernel/head64.o arch/x86/kernel/ebda.o arch/x86/kernel/platform-quirks.o
# makefile (from 'Makefile', line 289)
may-sync-config := 1
# makefile (from 'Makefile', line 361)
KERNELVERSION = $(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(SUBLEVEL)))$(EXTRAVERSION)
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# makefile (from 'scripts/Kbuild.include', line 42)
quiet_kecho := echo
# makefile (from 'Makefile', line 781)
stackp-flags- := -fstack-protector-strong
# makefile (from 'scripts/Kbuild.include', line 12)
pound := #
# makefile (from 'Makefile', line 475)
KBZIP2 = bzip2
# makefile (from 'Makefile', line 1053)
KBUILD_USERLDFLAGS :=  -m64
# makefile (from 'scripts/Kbuild.include', line 25)
basetarget = $(basename $(notdir $@))
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 457)
OBJCOPY = $(CROSS_COMPILE)objcopy
# makefile (from 'Makefile', line 1133)
HOST_LIBELF_LIBS = $(shell pkg-config libelf --libs 2>/dev/null || echo -lelf)
# makefile (from 'arch/x86/Makefile', line 43)
REALMODE_CFLAGS :=  -m16 -g -Os -DDISABLE_BRANCH_PROFILING -Wall -Wstrict-prototypes -march=i386 -mregparm=3 -fno-strict-aliasing -fomit-frame-pointer -fno-pic -mno-mmx -mno-sse -fcf-protection=none -ffreestanding -fno-stack-protector  -Wno-address-of-packed-member  -mpreferred-stack-boundary=2 
# makefile (from 'arch/x86/Makefile', line 92)
UTS_MACHINE := x86_64
# makefile (from 'arch/x86/Makefile', line 91)
BITS := 64
# default
SUFFIXES := 
# makefile (from 'scripts/Kbuild.include', line 218)
if_changed = $(if $(newer-prereqs)$(cmd-check), $(cmd); printf '%s\n' 'cmd_$@ := $(make-cmd)' > $(dot-target).cmd, @:)
# environment
SNAP_REEXEC = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# makefile (from 'Makefile', line 50)
GREP_OPTIONS := 
# makefile (from 'Makefile', line 517)
KBUILD_CFLAGS_KERNEL := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 1216)
vmlinux-alldirs := Documentation arch/x86 arch/x86/lib arch/x86/math-emu arch/x86/oprofile arch/x86/pci arch/x86/power arch/x86/video block certs crypto drivers fs init ipc kernel lib mm net samples security sound usr virt
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from 'Makefile', line 689)
RETPOLINE_CFLAGS_GCC := -mindirect-branch=thunk-extern -mindirect-branch-register
# makefile (from 'Makefile', line 224)
KBUILD_EXTMOD := 
# makefile (from 'Makefile', line 212)
KBUILD_CHECKSRC = 0
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 463)
RESOLVE_BTFIDS = $(objtree)/tools/bpf/resolve_btfids/resolve_btfids
# makefile (from 'Makefile', line 276)
clean-targets := %clean mrproper cleandocs
# makefile (from 'Makefile', line 1191)
quiet_cmd_headers_install = INSTALL $(INSTALL_HDR_PATH)/include
# makefile (from 'scripts/Kbuild.include', line 196)
cmd-check = $(filter-out $(subst $(space),$(space_escape),$(strip $(cmd_$@))), $(subst $(space),$(space_escape),$(strip $(cmd_$1))))
# makefile (from 'Makefile', line 274)
old_version_h := include/linux/version.h
# makefile (from 'scripts/Kbuild.include', line 29)
real-prereqs = $(filter-out $(PHONY), $^)
# makefile (from 'scripts/Kbuild.include', line 87)
TMPOUT = $(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_$$$$
# makefile (from 'Makefile', line 779)
stackp-flags-y := -fno-stack-protector
# makefile (from 'Makefile', line 1586)
DISTCLEAN_FILES = tags TAGS cscope* GPATH GTAGS GRTAGS GSYMS
# makefile (from 'Makefile', line 478)
LZ4 = lz4
# environment
LANG = C
# makefile (from 'arch/x86/Makefile', line 255)
drivers- = samples/ arch/x86/math-emu/ arch/x86/pci/ arch/x86/oprofile/ arch/x86/power/ arch/x86/video/
# makefile (from 'scripts/Kbuild.include', line 9)
empty := 
# environment
VSCODE_PID = 221420
# makefile (from 'Makefile', line 1243)
vmlinux-deps := arch/x86/kernel/vmlinux.lds arch/x86/kernel/head_64.o arch/x86/kernel/head64.o arch/x86/kernel/ebda.o arch/x86/kernel/platform-quirks.o init/built-in.a usr/built-in.a arch/x86/built-in.a kernel/built-in.a certs/built-in.a mm/built-in.a fs/built-in.a ipc/built-in.a security/built-in.a crypto/built-in.a block/built-in.a lib/built-in.a arch/x86/lib/built-in.a drivers/built-in.a sound/built-in.a net/built-in.a virt/built-in.a lib/lib.a arch/x86/lib/lib.a
# makefile (from 'scripts/Kbuild.include', line 7)
quote := "
# makefile (from 'scripts/Kbuild.include', line 44)
kecho := echo
# makefile (from 'Makefile', line 2007)
CHECKSTACK_ARCH := x86
# makefile (from 'Makefile', line 284)
single-targets := %.a %.i %.ko %.lds %.ll %.lst %.mod %.o %.s %.symtypes %/
# variable set hash-table stats:
# Load=362/1024=35%, Rehash=0, Collisions=576/2044=28%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66306, inode 6251000): 50 files, no impossibilities.
# ./arch/x86/configs/x86_64_defconfig (device 66306, inode 6273723): could not be opened.
# ./arch/x86/configs (device 66306, inode 6275402): 7 files, no impossibilities.
# ./arch/x86/configs/i386_defconfig (device 66306, inode 6273721): could not be opened.
# ./arch/x86/configs/tiny.config (device 66306, inode 6273722): could not be opened.
# ./arch/x86/configs/gki_defconfig (device 66306, inode 6273720): could not be opened.
# ./arch/x86/configs/xen.config (device 66306, inode 6273724): could not be opened.

# 57 files, no impossibilities in 7 directories.

# Implicit Rules

%/config/auto.conf %/config/auto.conf.cmd %/generated/autoconf.h: .config
#  recipe to execute (from 'Makefile', line 727):
	$(Q)$(kecho) "  SYNC    $@"
	$(Q)$(MAKE) -f $(srctree)/Makefile syncconfig

kselftest-%: FORCE
#  recipe to execute (from 'Makefile', line 1417):
	$(Q)$(MAKE) -C $(srctree)/tools/testing/selftests $*

%src-pkg: FORCE
#  recipe to execute (from 'Makefile', line 1631):
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.package $@

%pkg: include/config/kernel.release FORCE
#  recipe to execute (from 'Makefile', line 1633):
	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.package $@

tools/%: FORCE
#  recipe to execute (from 'Makefile', line 2034):
	$(Q)mkdir -p $(objtree)/tools
	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(tools_silent) $(filter --j% -j,$(MAKEFLAGS))" O=$(abspath $(objtree)) subdir=tools -C $(srctree)/tools/ $*

# 5 implicit rules, 0 (0.0%) terminal.

# Files

lib/lib.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

headers_check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1399):
	@:

scripts_gdb: prepare0
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1776):
	$(Q)$(MAKE) $(build)=scripts/gdb
	$(Q)ln -fsn $(abspath $(srctree)/scripts/gdb/vmlinux-gdb.py)

dt_binding_check: scripts_dtc
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
 
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1468):
	$(Q)$(MAKE) $(build)=Documentation/devicetree/bindings

drivers/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

certs/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

arch/x86/kernel/head_64.o: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

linkcheckdocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

sound/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

autoksyms_recursive:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

virt/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

htmldocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

ipc: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

outputmakefile:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

dochelp:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

# makefile (from 'Makefile', line 1602)
mrproper: rm-files := arch/x86/include/generated
mrproper: clean _mrproper_scripts
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/3=0%
#  recipe to execute (from 'Makefile', line 1610):
	$(call cmd,rmfiles)

scripts_dtc: scripts_basic
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1460):
	$(Q)$(MAKE) $(build)=scripts/dtc

ipc/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

kselftest:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1414):
	$(Q)$(MAKE) -C $(srctree)/tools/testing/selftests run_tests

fdimage288: vmlinux
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 284):
	$(Q)$(MAKE) $(build)=$(boot) $@

all: vmlinux bzImage
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

mm: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

bzlilo:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 288):
	$(Q)$(MAKE) $(build)=$(boot) $@

FORCE:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

vdso_install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 292):
	$(Q)$(MAKE) $(build)=arch/x86/entry/vdso $@

mm/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

crypto/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

net: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

.PHONY: __all scripts_basic outputmakefile all bzImage bzdisk fdimage fdimage144 fdimage288 isoimage install bzlilo vdso_install resolve_btfids_clean prepare0 headers archheaders archscripts headers_install autoksyms_recursive scripts prepare archprepare asm-generic uapi-asm-generic prepare-objtool prepare-resolve_btfids headerdep headers_check scripts_unifdef kselftest kselftest-merge scripts_dtc dt_binding_check modules modules_install archclean vmlinuxclean _mrproper_scripts mrproper distclean help xmldocs latexdocs pdfdocs htmldocs epubdocs cleandocs linkcheckdocs dochelp refcheckdocs scripts_gdb descend init usr arch/x86 kernel certs mm fs ipc security crypto block drivers sound net virt lib arch/x86/lib _clean_Documentation _clean_arch/x86 _clean_arch/x86/lib _clean_arch/x86/math-emu _clean_arch/x86/oprofile _clean_arch/x86/pci _clean_arch/x86/power _clean_arch/x86/video _clean_block _clean_certs _clean_crypto _clean_drivers _clean_fs _clean_init _clean_ipc _clean_kernel _clean_lib _clean_mm _clean_net _clean_samples _clean_security _clean_sound _clean_usr _clean_virt clean nsdeps clang-tidy clang-analyzer includecheck versioncheck coccicheck export_report checkstack kernelrelease kernelversion image_name FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

net/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

modules:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1553):
	@echo >&2
	@echo >&2 "The present kernel configuration has modules disabled."
	@echo >&2 "Type 'make config' and enable loadable module support."
	@echo >&2 "Then build a kernel with module support enabled."
	@echo >&2
	@exit 1

arch/x86/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

arch/x86/kernel/ebda.o: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

kernel/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

scripts: scripts_basic scripts_dtc
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1298):
	$(Q)$(MAKE) $(build)=$(@)

_clean_fs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
 
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

kernelrelease:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2014):
	@echo "$(KERNELVERSION)$$($(CONFIG_SHELL) $(srctree)/scripts/setlocalversion \
		$(srctree) $(BRANCH) $(KMI_GENERATION))"

.SECONDARY:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

cleandocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

# makefile (from 'Makefile', line 1614)
distclean: rm-files := 
distclean: mrproper
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/2=0%
#  recipe to execute (from 'Makefile', line 1619):
	$(call cmd,rmfiles)
	@find $(srctree) $(RCS_FIND_IGNORE) \
		\( -name '*.orig' -o -name '*.rej' -o -name '*~' \
		-o -name '*.bak' -o -name '#*#' -o -name '*%' \
		-o -name 'core' \) \
		-type f -print | xargs rm -f

versioncheck:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1988):
	find $(srctree)/* $(RCS_FIND_IGNORE) \
		-name '*.[hcS]' -type f -print | sort \
		| xargs $(PERL) -w $(srctree)/scripts/checkversion.pl

latexdocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

usr/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

fdimage: vmlinux
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 284):
	$(Q)$(MAKE) $(build)=$(boot) $@

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

tags: FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1940):
	$(call cmd,tags)

arch/x86/lib/lib.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

_clean_arch/x86/lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

image_name:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2021):
	@echo $(KBUILD_IMAGE)

lib/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

# Not a target:
Makefile:
#  Implicit rule search has not been done.
#  Last modified 2022-08-26 01:46:26.4525719
#  File has not been updated.

kernel: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

sound: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

certs: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

__all: all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

_clean_arch/x86/pci:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

kernel/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

drivers: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

modules_install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1553):
	@echo >&2
	@echo >&2 "The present kernel configuration has modules disabled."
	@echo >&2 "Type 'make config' and enable loadable module support."
	@echo >&2 "Then build a kernel with module support enabled."
	@echo >&2
	@exit 1

vmlinuxclean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1595):
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/link-vmlinux.sh clean
	$(Q)$(if $(ARCH_POSTLINK), $(MAKE) -f $(ARCH_POSTLINK) clean)

sound/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

# Not a target:
scripts/Makefile.extrawarn:
#  Implicit rule search has been done.
#  Last modified 2022-08-26 01:46:30.083123576
#  File has been updated.
#  Successfully updated.

virt/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

checkbin:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 297):
	@echo Compiler lacks asm-goto support.
	@exit 1

arch/x86: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

epubdocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

_clean_sound:
#  Phony target (prerequisite of .PHONY).
 
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

_clean_certs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

pdfdocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

include/generated/autoconf.h:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

asm-generic: uapi-asm-generic
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1324):
	$(Q)$(MAKE) $(asm-generic)=arch/$(SRCARCH)/include/generated/asm \
	generic=include/asm-generic

kselftest-merge:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1421):
	$(if $(wildcard $(objtree)/.config),, $(error No .config exists, config your kernel first!))
	$(Q)find $(srctree)/tools/testing/selftests -name config | \
		xargs $(srctree)/scripts/kconfig/merge_config.sh -m $(objtree)/.config
	$(Q)$(MAKE) -f $(srctree)/Makefile olddefconfig

prepare: prepare0 prepare-objtool prepare-resolve_btfids
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

arch/x86/kernel/head64.o: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

crypto: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

crypto/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

arch/x86/kernel/platform-quirks.o: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

cscope: FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1940):
	$(call cmd,tags)

arch/x86/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

prepare0: archprepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1313):
	$(Q)$(MAKE) $(build)=scripts/mod
	$(Q)$(MAKE) $(build)=.

_clean_crypto:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

_clean_mm:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

clang-tidy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1973):
	@echo "$@ requires CC=clang" >&2
	@false

_clean_arch/x86/math-emu:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

xmldocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

security/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

prepare-objtool:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

# 'override' directive
.config: .SHELLSTATUS := 1
.config:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has been updated.
#  Failed to be updated.
# automatic
# @ := .config
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=9/32=28%, Rehash=0, Collisions=24/68=35%
#  recipe to execute (from 'Makefile', line 708):
	@echo >&2 '***'
	@echo >&2 '*** Configuration file "$@" not found!'
	@echo >&2 '***'
	@echo >&2 '*** Please run some configurator (e.g. "make oldconfig" or'
	@echo >&2 '*** "make menuconfig" or "make xconfig").'
	@echo >&2 '***'
	@/bin/false

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1645):
	@echo  'Cleaning targets:'
	@echo  '  clean		  - Remove most generated files but keep the config and'
	@echo  '                    enough build support to build external modules'
	@echo  '  mrproper	  - Remove all generated files + config + various backup files'
	@echo  '  distclean	  - mrproper + remove editor backup and patch files'
	@echo  ''
	@echo  'Configuration targets:'
	@$(MAKE) -f $(srctree)/scripts/kconfig/Makefile help
	@echo  ''
	@echo  'Other generic targets:'
	@echo  '  all		  - Build all targets marked with [*]'
	@echo  '* vmlinux	  - Build the bare kernel'
	@echo  '* modules	  - Build all modules'
	@echo  '  modules_install - Install all modules to INSTALL_MOD_PATH (default: /)'
	@echo  '  dir/            - Build all files in dir and below'
	@echo  '  dir/file.[ois]  - Build specified target only'
	@echo  '  dir/file.ll     - Build the LLVM assembly file'
	@echo  '                    (requires compiler support for LLVM assembly generation)'
	@echo  '  dir/file.lst    - Build specified mixed source/assembly target only'
	@echo  '                    (requires a recent binutils and recent build (System.map))'
	@echo  '  dir/file.ko     - Build module including final link'
	@echo  '  modules_prepare - Set up for building external modules'
	@echo  '  tags/TAGS	  - Generate tags file for editors'
	@echo  '  cscope	  - Generate cscope index'
	@echo  '  gtags           - Generate GNU GLOBAL index'
	@echo  '  kernelrelease	  - Output the release version string (use with make -s)'
	@echo  '  kernelversion	  - Output the version stored in Makefile (use with make -s)'
	@echo  '  image_name	  - Output the image name (use with make -s)'
	@echo  '  headers_install - Install sanitised kernel headers to INSTALL_HDR_PATH'; \
	 echo  '                    (default: $(INSTALL_HDR_PATH))'; \
	 echo  ''
	@echo  'Static analysers:'
	@echo  '  checkstack      - Generate a list of stack hogs'
	@echo  '  versioncheck    - Sanity check on version.h usage'
	@echo  '  includecheck    - Check for duplicate included header files'
	@echo  '  export_report   - List the usages of all exported symbols'
	@echo  '  headerdep       - Detect inclusion cycles in headers'
	@echo  '  coccicheck      - Check with Coccinelle'
	@echo  '  clang-analyzer  - Check with clang static analyzer'
	@echo  '  clang-tidy      - Check with clang-tidy'
	@echo  ''
	@echo  'Tools:'
	@echo  '  nsdeps          - Generate missing symbol namespace dependencies'
	@echo  ''
	@echo  'Kernel selftest:'
	@echo  '  kselftest         - Build and run kernel selftest'
	@echo  '                      Build, install, and boot kernel before'
	@echo  '                      running kselftest on it'
	@echo  '                      Run as root for full coverage'
	@echo  '  kselftest-all     - Build kernel selftest'
	@echo  '  kselftest-install - Build and install kernel selftest'
	@echo  '  kselftest-clean   - Remove all generated kselftest files'
	@echo  '  kselftest-merge   - Merge all the config dependencies of'
	@echo  '		      kselftest to existing .config.'
	@echo  ''
 
	@$(if $(dtstree), \
		echo 'Devicetree:'; \
		echo '* dtbs             - Build device tree blobs for enabled boards'; \
		echo '  dtbs_install     - Install dtbs to $(INSTALL_DTBS_PATH)'; \
		echo '  dt_binding_check - Validate device tree binding documents'; \
		echo '  dtbs_check       - Validate device tree source files';\
		echo '')
	@echo 'Userspace tools targets:'
	@echo '  use "make tools/help"'
	@echo '  or  "cd tools; make help"'
	@echo  ''
	@echo  'Kernel packaging:'
	@$(MAKE) -f $(srctree)/scripts/Makefile.package help
	@echo  ''
	@echo  'Documentation targets:'
	@$(MAKE) -f $(srctree)/Documentation/Makefile dochelp
	@echo  ''
	@echo  'Architecture specific targets ($(SRCARCH)):'
	@$(if $(archhelp),$(archhelp),\
		echo '  No architecture specific help defined for $(SRCARCH)')
	@echo  ''
	@$(if $(boards), \
		$(foreach b, $(boards), \
		printf "  %-27s - Build for %s\\n" $(b) $(subst _defconfig,,$(b));) \
		echo '')
	@$(if $(board-dirs), \
		$(foreach b, $(board-dirs), \
		printf "  %-16s - Show %s-specific targets\\n" help-$(b) $(b);) \
		printf "  %-16s - Show all of the above\\n" help-boards; \
		echo '')
	@echo  '  make V=0|1 [targets] 0 => quiet build (default), 1 => verbose build'
	@echo  '  make V=2   [targets] 2 => give reason for rebuild of target'
	@echo  '  make O=dir [targets] Locate all output files in "dir", including .config'
	@echo  '  make C=1   [targets] Check re-compiled c source with $$CHECK'
	@echo  '                       (sparse by default)'
	@echo  '  make C=2   [targets] Force check of all c source with $$CHECK'
	@echo  '  make RECORDMCOUNT_WARN=1 [targets] Warn about ignored mcount sections'
	@echo  '  make W=n   [targets] Enable extra build checks, n=1,2,3 where'
	@echo  '		1: warnings which may be relevant and do not occur too often'
	@echo  '		2: warnings which occur quite often but may still be relevant'
	@echo  '		3: more obscure warnings, can most likely be ignored'
	@echo  '		Multiple levels can be combined with W=12 or W=123'
	@echo  ''
	@echo  'Execute "make" or "make all" to build all targets marked with [*] '
	@echo  'For further info see the ./README file'

usr: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

archprepare: checkbin outputmakefile archheaders archscripts scripts include/config/kernel.release asm-generic include/generated/uapi/linux/version.h include/generated/utsrelease.h include/generated/autoconf.h
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

usr/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

headers: include/generated/uapi/linux/version.h scripts_unifdef uapi-asm-generic archheaders archscripts
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1203):
	$(if $(wildcard $(srctree)/arch/$(SRCARCH)/include/uapi/asm/Kbuild),, \
	  $(error Headers not exportable for the $(SRCARCH) architecture))
	$(Q)$(MAKE) $(hdr-inst)=$(hdr-prefix)include/uapi
	$(Q)$(MAKE) $(hdr-inst)=$(hdr-prefix)arch/$(SRCARCH)/include/uapi

include/config/kernel.release: FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1291):
	$(call filechk,kernel.release)

kernelversion:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2018):
	@echo $(KERNELVERSION)

archheaders:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 230):
	$(Q)$(MAKE) $(build)=arch/x86/entry/syscalls all

lib: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

init/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

checkstack:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2010):
	$(OBJDUMP) -d vmlinux $$(find . -name '*.ko') | \
	$(PERL) $(srctree)/scripts/checkstack.pl $(CHECKSTACK_ARCH)

archclean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 309):
	$(Q)rm -rf $(objtree)/arch/i386
	$(Q)rm -rf $(objtree)/arch/x86_64
	$(Q)$(MAKE) $(clean)=$(boot)
	$(Q)$(MAKE) $(clean)=arch/x86/tools

lib/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

# makefile (from 'Makefile', line 1383)
include/generated/uapi/linux/version.h: SUBLEVEL :=  59
# makefile (from 'Makefile', line 1382)
include/generated/uapi/linux/version.h: PATCHLEVEL :=  10
include/generated/uapi/linux/version.h: FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=2/32=6%, Rehash=0, Collisions=0/6=0%
#  recipe to execute (from 'Makefile', line 1385):
	$(call filechk,version.h)
	$(Q)rm -f $(old_version_h)

arch/x86/lib/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

# Not a target:
arch/x86/Makefile:
#  Implicit rule search has not been done.
#  Last modified 2022-08-26 01:46:27.027685977
#  File has not been updated.

_clean_virt:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

_clean_init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

include/generated/utsrelease.h: include/config/kernel.release FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1389):
	$(call filechk,utsrelease.h)

_clean_arch/x86/video:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

clang-analyzer:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1973):
	@echo "$@ requires CC=clang" >&2
	@false

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

_clean_kernel:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

headerdep:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1393):
	$(Q)find $(srctree)/include/ -name '*.h' | xargs --max-args 1 \
	$(srctree)/scripts/headerdep.pl -I$(srctree)/include

mm/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

arch/x86/kernel/vmlinux.lds: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

bzImage: vmlinux
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 279):
	$(Q)$(MAKE) $(build)=$(boot) $(KBUILD_IMAGE)
	$(Q)mkdir -p $(objtree)/arch/$(UTS_MACHINE)/boot
	$(Q)ln -fsn ../../x86/boot/bzImage $(objtree)/arch/$(UTS_MACHINE)/boot/$@

_clean_block:
#  Phony target (prerequisite of .PHONY).
 
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

_clean_samples:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

fs/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

# makefile (from 'Makefile', line 1590)
clean: rm-files := include/ksym vmlinux.symvers modules-only.symvers modules.builtin modules.builtin.modinfo modules.nsdeps compile_commands.json .thinlto-cache
clean: _clean_Documentation _clean_arch/x86 _clean_arch/x86/lib _clean_arch/x86/math-emu _clean_arch/x86/oprofile _clean_arch/x86/pci _clean_arch/x86/power _clean_arch/x86/video _clean_block _clean_certs _clean_crypto _clean_drivers _clean_fs _clean_init _clean_ipc _clean_kernel _clean_lib _clean_mm _clean_net _clean_samples _clean_security _clean_sound _clean_usr _clean_virt archclean vmlinuxclean resolve_btfids_clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/2=0%
#  recipe to execute (from 'Makefile', line 1917):
	$(call cmd,rmfiles)
	@find $(if $(KBUILD_EXTMOD), $(KBUILD_EXTMOD), .) $(RCS_FIND_IGNORE) \
		\( -name '*.[aios]' -o -name '*.ko' -o -name '.*.cmd' \
		-o -name '*.ko.*' \
		-o -name '*.dtb' -o -name '*.dtb.S' -o -name '*.dt.yaml' \
		-o -name '*.dwo' -o -name '*.lst' \
		-o -name '*.su' -o -name '*.mod' \
		-o -name '.*.d' -o -name '.*.tmp' -o -name '*.mod.c' \
		-o -name '*.lex.c' -o -name '*.tab.[ch]' \
		-o -name '*.asn1.[ch]' \
		-o -name '*.symtypes' -o -name 'modules.order' \
		-o -name '.tmp_*.o.*' \
		-o -name '*.c.[012]*.*' \
		-o -name '*.ll' \
		-o -name '*.gcno' \
		-o -name '*.*.symversions' \) -type f -print | xargs rm -f

security/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

_clean_arch/x86/power:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

scripts_unifdef: scripts_basic
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1407):
	$(Q)$(MAKE) $(build)=scripts scripts/unifdef

descend: init usr arch/x86 kernel certs mm fs ipc security crypto block drivers sound net virt lib arch/x86/lib
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

_clean_arch/x86/oprofile:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

_clean_Documentation:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

block/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 288):
	$(Q)$(MAKE) $(build)=$(boot) $@

_clean_security:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

init: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

# Not a target:
scripts/link-vmlinux.sh:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

_clean_usr:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

init/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

uapi-asm-generic:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1327):
	$(Q)$(MAKE) $(asm-generic)=arch/$(SRCARCH)/include/generated/uapi/asm \
	generic=include/uapi/asm-generic

arch/x86/lib: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

scripts_basic:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 550):
	$(Q)$(MAKE) $(build)=scripts/basic
	$(Q)rm -f .tmp_quiet_recordmcount

resolve_btfids_clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1156):
	$(Q)$(MAKE) -sC $(srctree)/tools/bpf/resolve_btfids O=$(resolve_btfids_O) clean

drivers/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

arch/x86/lib/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

help-boards:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

vmlinux: scripts/link-vmlinux.sh autoksyms_recursive arch/x86/kernel/vmlinux.lds arch/x86/kernel/head_64.o arch/x86/kernel/head64.o arch/x86/kernel/ebda.o arch/x86/kernel/platform-quirks.o init/built-in.a usr/built-in.a arch/x86/built-in.a kernel/built-in.a certs/built-in.a mm/built-in.a fs/built-in.a ipc/built-in.a security/built-in.a crypto/built-in.a block/built-in.a lib/built-in.a arch/x86/lib/built-in.a drivers/built-in.a sound/built-in.a net/built-in.a virt/built-in.a lib/lib.a arch/x86/lib/lib.a FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1276):
	+$(call if_changed,link-vmlinux)

_clean_lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

_clean_arch/x86:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

bzdisk: vmlinux
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 284):
	$(Q)$(MAKE) $(build)=$(boot) $@

security: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

_clean_drivers:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

include/config/auto.conf:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

virt: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
 
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

ipc/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

# Not a target:
scripts/clang-tools/gen_compile_commands.py:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

headers_install: headers
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1199):
	$(call cmd,headers_install)

# makefile (from 'Makefile', line 1946)
nsdeps: KBUILD_NSDEPS = 1
nsdeps: modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/1=0%
#  recipe to execute (from 'Makefile', line 1948):
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/nsdeps

.DELETE_ON_ERROR:
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.

includecheck:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1983):
	find $(srctree)/* $(RCS_FIND_IGNORE) \
		-name '*.[hcS]' -type f -print | sort \
		| xargs $(PERL) -w $(srctree)/scripts/checkincludes.pl

compile_commands.json: scripts/clang-tools/gen_compile_commands.py arch/x86/kernel/head_64.o arch/x86/kernel/head64.o arch/x86/kernel/ebda.o arch/x86/kernel/platform-quirks.o init/built-in.a usr/built-in.a arch/x86/built-in.a kernel/built-in.a certs/built-in.a mm/built-in.a fs/built-in.a ipc/built-in.a security/built-in.a crypto/built-in.a block/built-in.a lib/built-in.a arch/x86/lib/built-in.a drivers/built-in.a sound/built-in.a net/built-in.a virt/built-in.a lib/lib.a arch/x86/lib/lib.a FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1959):
	$(call if_changed,gen_compile_commands)

# Not a target:
scripts/Kbuild.include:
#  Implicit rule search has not been done.
#  Last modified 2022-08-26 01:46:30.083123576
#  File has not been updated.

_mrproper_scripts:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1607):
	$(Q)$(MAKE) $(clean)=$(patsubst _mrproper_%,%,$@)

gtags: FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1940):
	$(call cmd,tags)

net/modules.order: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

refcheckdocs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1769):
	$(Q)$(MAKE) $(build)=Documentation $@

_clean_ipc:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

tools/: FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2030):
	$(Q)mkdir -p $(objtree)/tools
	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(tools_silent) $(filter --j% -j,$(MAKEFLAGS))" O=$(abspath $(objtree)) subdir=tools -C $(srctree)/tools/

coccicheck:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1993):
	$(Q)$(BASH) $(srctree)/scripts/$@

include/config/auto.conf.cmd: .config
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'include'
#  File is an intermediate prerequisite.
#  Also makes: include/generated/autoconf.h include/config/auto.conf
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/56=0%
#  recipe to execute (from 'Makefile', line 727):
	$(Q)$(kecho) "  SYNC    $@"
	$(Q)$(MAKE) -f $(srctree)/Makefile syncconfig

fs: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

prepare-resolve_btfids:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.

fs/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

TAGS: FORCE
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1940):
	$(call cmd,tags)

_clean_net:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1914):
	$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)

export_report:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1996):
	$(PERL) $(srctree)/scripts/export_report.pl

# Not a target:
scripts/subarch.include:
#  Implicit rule search has not been done.
#  Last modified 2022-08-26 01:46:30.095106212
#  File has not been updated.

block: prepare
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1907):
	$(Q)$(MAKE) $(build)=$@ \
	single-build=$(if $(filter-out $@/, $(filter $@/%, $(KBUILD_SINGLE_TARGETS))),1) \
	$(if $(KBUILD_MIXED_TREE),,need-builtin=1) need-modorder=1

isoimage: vmlinux
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 284):
	$(Q)$(MAKE) $(build)=$(boot) $@

fdimage144: vmlinux
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 284):
	$(Q)$(MAKE) $(build)=$(boot) $@

certs/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

block/built-in.a: descend
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1283):
	

archscripts: scripts_basic
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'arch/x86/Makefile', line 224):
	$(Q)$(MAKE) $(build)=arch/x86/tools relocs

# files hash-table stats:
# Load=176/1024=17%, Rehash=0, Collisions=41/519=8%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 229 / storage = 3252 B / avg = 14 B
# current buf: size = 8162 B / used = 3252 B / count = 229 / avg = 14 B

# strcache performance: lookups = 697 / hit rate = 67%
# hash-table stats:
# Load=229/8192=3%, Rehash=0, Collisions=11/697=2%
# Finished Make data base on Fri Aug 26 02:51:49 2022

 
